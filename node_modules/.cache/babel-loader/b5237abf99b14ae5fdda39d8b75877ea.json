{"ast":null,"code":"import _slicedToArray from\"/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from\"react\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faStopwatch}from\"@fortawesome/free-solid-svg-icons\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var countdownDate=new Date().getTime()+86400000*3;//three days in the future. Has to be here as the function constantly updates the state\nvar Countdown=function Countdown(){var _useState=useState(\"00\"),_useState2=_slicedToArray(_useState,2),timerDays=_useState2[0],setTimerDays=_useState2[1];var _useState3=useState(\"00\"),_useState4=_slicedToArray(_useState3,2),timerHours=_useState4[0],setTimerHours=_useState4[1];var _useState5=useState(\"00\"),_useState6=_slicedToArray(_useState5,2),timerMinutes=_useState6[0],setTimerMinutes=_useState6[1];var _useState7=useState(\"00\"),_useState8=_slicedToArray(_useState7,2),timerSeconds=_useState8[0],setTimerSeconds=_useState8[1];var interval=useRef();var startTimer=function startTimer(){interval=setInterval(function(){var timeDifference=countdownDate-new Date().getTime();//gets the time difference between now and the countdown date\nvar days=Math.floor(timeDifference/(1000*60*60*24));//unix time to days, etc\nvar hours=Math.floor(timeDifference%(1000*60*60*24)/(1000*60*60)// unix time to hours\n);var minutes=Math.floor(timeDifference%(1000*60*60)/(1000*60)//unix time to minutes\n);var seconds=timeDifference%(1000*60)/1000;//unix time to seconds\nif(timeDifference<0){//stop timer\nclearInterval(interval.current);}else{//update time\nsetTimerDays(days);setTimerHours(hours);setTimerMinutes(minutes);setTimerSeconds(seconds);}},50);};//componentdidmount\nuseEffect(function(){startTimer();return function(){clearInterval(interval.current);};});//SVG CIRCLE - Working out the radius\nvar daysRadius=mapNumber(timerDays,30,0,0,360);var hoursRadius=mapNumber(timerHours,24,0,0,360);var minutesRadius=mapNumber(timerMinutes,60,0,0,360);var secondsRadius=mapNumber(timerSeconds,60,0,0,360);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"countdownHeader\",children:\"Countdown...\"}),/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"stopWatch\",icon:faStopwatch,size:\"2x\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"countdownContainer\",children:[timerDays>=0&&/*#__PURE__*/_jsxs(\"div\",{className:\"countdownItem\",children:[/*#__PURE__*/_jsx(SVGCircle,{radius:daysRadius}),timerDays,/*#__PURE__*/_jsx(\"span\",{children:\"Days\"})]}),timerHours>=0&&/*#__PURE__*/_jsxs(\"div\",{className:\"countdownItem\",children:[/*#__PURE__*/_jsx(SVGCircle,{radius:hoursRadius}),timerHours,/*#__PURE__*/_jsx(\"span\",{children:\"Hours\"})]}),timerMinutes>=0&&/*#__PURE__*/_jsxs(\"div\",{className:\"countdownItem\",children:[/*#__PURE__*/_jsx(SVGCircle,{radius:minutesRadius}),timerMinutes,/*#__PURE__*/_jsx(\"span\",{children:\"Minutes\"})]}),timerSeconds>=0&&/*#__PURE__*/_jsxs(\"div\",{className:\"countdownItem\",children:[/*#__PURE__*/_jsx(SVGCircle,{radius:secondsRadius}),Math.round(timerSeconds),/*#__PURE__*/_jsx(\"span\",{children:\"Seconds\"})]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"Until your tour departs!\"})})]});};//code for displaying the SVG\nvar SVGCircle=function SVGCircle(_ref){var radius=_ref.radius;return/*#__PURE__*/_jsx(\"svg\",{className:\"countdownSVG\",children:/*#__PURE__*/_jsx(\"path\",{fill:\"none\",stroke:\"green\",strokeWidth:\"4\",d:describeArc(50,50,48,0,radius)})});};// from StackOverflow - to map the date values to their corresponding radius\nfunction mapNumber(number,inMin,inMax,outMin,outMax){return(number-inMin)*(outMax-outMin)/(inMax-inMin)+outMin;}//calculation taken from Stackoverflow to calculate the SVG path for the arc of a circle\nfunction polarToCartesian(centerX,centerY,radius,angleInDegrees){var angleInRadians=(angleInDegrees-90)*Math.PI/180.0;return{x:centerX+radius*Math.cos(angleInRadians),y:centerY+radius*Math.sin(angleInRadians)};}function describeArc(x,y,radius,startAngle,endAngle){var start=polarToCartesian(x,y,radius,endAngle);var end=polarToCartesian(x,y,radius,startAngle);var largeArcFlag=endAngle-startAngle<=180?\"0\":\"1\";var d=[\"M\",start.x,start.y,\"A\",radius,radius,0,largeArcFlag,0,end.x,end.y].join(\" \");return d;}export default Countdown;","map":{"version":3,"sources":["/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/src/components/Countdown.jsx"],"names":["React","useEffect","useRef","useState","FontAwesomeIcon","faStopwatch","countdownDate","Date","getTime","Countdown","timerDays","setTimerDays","timerHours","setTimerHours","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","interval","startTimer","setInterval","timeDifference","days","Math","floor","hours","minutes","seconds","clearInterval","current","daysRadius","mapNumber","hoursRadius","minutesRadius","secondsRadius","round","SVGCircle","radius","describeArc","number","inMin","inMax","outMin","outMax","polarToCartesian","centerX","centerY","angleInDegrees","angleInRadians","PI","x","cos","y","sin","startAngle","endAngle","start","end","largeArcFlag","d","join"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStopwatch } from \"@fortawesome/free-solid-svg-icons\";\n\nconst countdownDate = new Date().getTime() + 86400000 * 3; //three days in the future. Has to be here as the function constantly updates the state\n\nconst Countdown = () => {\n\tconst [timerDays, setTimerDays] = useState(\"00\");\n\tconst [timerHours, setTimerHours] = useState(\"00\");\n\tconst [timerMinutes, setTimerMinutes] = useState(\"00\");\n\tconst [timerSeconds, setTimerSeconds] = useState(\"00\");\n\n\tvar interval = useRef();\n\n\tconst startTimer = () => {\n\t\tinterval = setInterval(() => {\n\t\t\tconst timeDifference = countdownDate - new Date().getTime(); //gets the time difference between now and the countdown date\n\n\t\t\tconst days = Math.floor(timeDifference / (1000 * 60 * 60 * 24)); //unix time to days, etc\n\t\t\tconst hours = Math.floor(\n\t\t\t\t(timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60) // unix time to hours\n\t\t\t);\n\t\t\tconst minutes = Math.floor(\n\t\t\t\t(timeDifference % (1000 * 60 * 60)) / (1000 * 60) //unix time to minutes\n\t\t\t);\n\t\t\tconst seconds = (timeDifference % (1000 * 60)) / 1000; //unix time to seconds\n\n\t\t\tif (timeDifference < 0) {\n\t\t\t\t//stop timer\n\t\t\t\tclearInterval(interval.current);\n\t\t\t} else {\n\t\t\t\t//update time\n\t\t\t\tsetTimerDays(days);\n\t\t\t\tsetTimerHours(hours);\n\t\t\t\tsetTimerMinutes(minutes);\n\t\t\t\tsetTimerSeconds(seconds);\n\t\t\t}\n\t\t}, 50);\n\t};\n\t//componentdidmount\n\tuseEffect(() => {\n\t\tstartTimer();\n\t\treturn () => {\n\t\t\tclearInterval(interval.current);\n\t\t};\n\t});\n\n\t//SVG CIRCLE - Working out the radius\n\tconst daysRadius = mapNumber(timerDays, 30, 0, 0, 360);\n\tconst hoursRadius = mapNumber(timerHours, 24, 0, 0, 360);\n\tconst minutesRadius = mapNumber(timerMinutes, 60, 0, 0, 360);\n\tconst secondsRadius = mapNumber(timerSeconds, 60, 0, 0, 360);\n\n\treturn (\n\t\t<>\n\t\t\t<h2 className=\"countdownHeader\">Countdown...</h2>\n\t\t\t<FontAwesomeIcon className=\"stopWatch\" icon={faStopwatch} size=\"2x\" />\n\n\t\t\t<div className=\"countdownContainer\">\n\t\t\t\t{timerDays >= 0 && (\n\t\t\t\t\t<div className=\"countdownItem\">\n\t\t\t\t\t\t<SVGCircle radius={daysRadius} />\n\t\t\t\t\t\t{timerDays}\n\t\t\t\t\t\t<span>Days</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{timerHours >= 0 && (\n\t\t\t\t\t<div className=\"countdownItem\">\n\t\t\t\t\t\t<SVGCircle radius={hoursRadius} />\n\t\t\t\t\t\t{timerHours}\n\t\t\t\t\t\t<span>Hours</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{timerMinutes >= 0 && (\n\t\t\t\t\t<div className=\"countdownItem\">\n\t\t\t\t\t\t<SVGCircle radius={minutesRadius} />\n\t\t\t\t\t\t{timerMinutes}\n\t\t\t\t\t\t<span>Minutes</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{timerSeconds >= 0 && (\n\t\t\t\t\t<div className=\"countdownItem\">\n\t\t\t\t\t\t<SVGCircle radius={secondsRadius} />\n\t\t\t\t\t\t{Math.round(timerSeconds)}\n\t\t\t\t\t\t<span>Seconds</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<p>Until your tour departs!</p>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n//code for displaying the SVG\nconst SVGCircle = ({ radius }) => (\n\t<svg className=\"countdownSVG\">\n\t\t<path\n\t\t\tfill=\"none\"\n\t\t\tstroke=\"green\"\n\t\t\tstrokeWidth=\"4\"\n\t\t\td={describeArc(50, 50, 48, 0, radius)}\n\t\t/>\n\t</svg>\n);\n\n// from StackOverflow - to map the date values to their corresponding radius\nfunction mapNumber(number, inMin, inMax, outMin, outMax) {\n\treturn ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n}\n//calculation taken from Stackoverflow to calculate the SVG path for the arc of a circle\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n\tvar angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n\n\treturn {\n\t\tx: centerX + radius * Math.cos(angleInRadians),\n\t\ty: centerY + radius * Math.sin(angleInRadians),\n\t};\n}\n\nfunction describeArc(x, y, radius, startAngle, endAngle) {\n\tvar start = polarToCartesian(x, y, radius, endAngle);\n\tvar end = polarToCartesian(x, y, radius, startAngle);\n\n\tvar largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n\n\tvar d = [\n\t\t\"M\",\n\t\tstart.x,\n\t\tstart.y,\n\t\t\"A\",\n\t\tradius,\n\t\tradius,\n\t\t0,\n\t\tlargeArcFlag,\n\t\t0,\n\t\tend.x,\n\t\tend.y,\n\t].join(\" \");\n\n\treturn d;\n}\nexport default Countdown;\n"]},"metadata":{},"sourceType":"module"}