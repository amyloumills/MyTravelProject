{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countdown = () => {\n  _s();\n\n  const [timerDays, setTimerDays] = useState(\"00\");\n  const [timerHours, setTimerHours] = useState(\"00\");\n  const [timerMinutes, setTimerMinutes] = useState(\"00\");\n  const [timerSeconds, setTimerSeconds] = useState(\"00\");\n  let interval = useRef();\n\n  const startTimer = () => {\n    let today = new Date().toLocaleDateString(\"en-GB\", {\n      hour: \"numeric\",\n      minute: \"numeric\"\n    });\n    interval = setInterval();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Countdown, \"Yr31fkrN8k2k6tA9U3Yhb0Vm3eA=\");\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/src/components/Countdown.jsx"],"names":["React","useEffect","useRef","useState","Countdown","timerDays","setTimerDays","timerHours","setTimerHours","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","interval","startTimer","today","Date","toLocaleDateString","hour","minute","setInterval"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;AAEA,MAAIU,QAAQ,GAAGX,MAAM,EAArB;;AAEA,QAAMY,UAAU,GAAG,MAAM;AACxB,QAAIC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,CAA8B,OAA9B,EAAuC;AAClDC,MAAAA,IAAI,EAAE,SAD4C;AAElDC,MAAAA,MAAM,EAAE;AAF0C,KAAvC,CAAZ;AAIAN,IAAAA,QAAQ,GAAGO,WAAW,EAAtB;AACA,GAND;;AAQA,sBAAO,qCAAP;AACA,CAjBD;;GAAMhB,S;;KAAAA,S;AAmBN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nconst Countdown = () => {\n\tconst [timerDays, setTimerDays] = useState(\"00\");\n\tconst [timerHours, setTimerHours] = useState(\"00\");\n\tconst [timerMinutes, setTimerMinutes] = useState(\"00\");\n\tconst [timerSeconds, setTimerSeconds] = useState(\"00\");\n\n\tlet interval = useRef();\n\n\tconst startTimer = () => {\n\t\tlet today = new Date().toLocaleDateString(\"en-GB\", {\n\t\t\thour: \"numeric\",\n\t\t\tminute: \"numeric\",\n\t\t});\n\t\tinterval = setInterval();\n\t};\n\n\treturn <></>;\n};\n\nexport default Countdown;\n"]},"metadata":{},"sourceType":"module"}