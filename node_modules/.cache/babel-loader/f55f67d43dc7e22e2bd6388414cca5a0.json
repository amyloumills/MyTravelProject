{"ast":null,"code":"var _jsxFileName = \"/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/src/components/ForecastTest.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ForecastTest = () => {\n  _s();\n\n  const apiKey = `a2e9f900ab03f983ca54c821ab03cb37`;\n  const url = `https://api.openweathermap.org/data/2.5/onecall?lat=55.9533&lon=3.1883&exclude={minutely,hourly,alerts}&appid=${apiKey}&units=metric`; // const [latitude, setLatitude] = useState(0);\n  // const [longitude, setLongitude] = useState(0);\n\n  const [weather, setWeather] = useState(\"\");\n  const [temperature, setTemperature] = useState(0);\n  const [feelsLike, setFeelsLike] = useState(0);\n  const [iconCode, setIconCode] = useState(\"\"); // const savePositionToState = (position) => {\n  // \tsetLatitude(position.coords.latitude);\n  // \tsetLongitude(position.coords.longitude);\n  // };\n  // const getLocation = async () => {\n  // \tawait window.navigator.geolocation.getCurrentPosition(savePositionToState);\n  // };\n\n  useEffect(() => {\n    getWeather();\n  }, []);\n\n  const getWeather = async () => {\n    try {\n      const response = await axios.get(`${url}`);\n      setTemperature(Math.round(response.data.current.temp));\n      setWeather(response.data.current.weather[0].main);\n      setFeelsLike(Math.round(response.data.current.feels_like));\n      setIconCode(response.data.current.weather[0].icon);\n    } catch (err) {\n      console.error(err);\n    }\n  }; // useEffect(() => {\n  // \tif (longitude && latitude) getWeather();\n  // }, [latitude, longitude]);\n  // console.log(weather);\n  // if (!temperature || !weather) {\n  // \treturn <div className=\"container\">Weather loading...</div>;\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"The Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"EDINBURGH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [temperature, \"\\xBAC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Feels like \", feelsLike, \"\\xBAC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://openweathermap.org/img/wn/${iconCode}@2x.png`,\n          alt: \"weather icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Five day forecast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"TEMPERATURE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ForecastTest, \"l0sJkAnwulQF6ZSoqtgq106Iuck=\");\n\n_c = ForecastTest;\nexport default ForecastTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastTest\");","map":{"version":3,"sources":["/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/src/components/ForecastTest.jsx"],"names":["useEffect","useState","axios","ForecastTest","apiKey","url","weather","setWeather","temperature","setTemperature","feelsLike","setFeelsLike","iconCode","setIconCode","getWeather","response","get","Math","round","data","current","temp","main","feels_like","icon","err","console","error"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC1B,QAAMC,MAAM,GAAI,kCAAhB;AACA,QAAMC,GAAG,GAAI,iHAAgHD,MAAO,eAApI,CAF0B,CAI1B;AACA;;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC,CAT0B,CAW1B;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACfc,IAAAA,UAAU;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,UAAU,GAAG,YAAY;AAC9B,QAAI;AACH,YAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,GAAEX,GAAI,EAAjB,CAAvB;AACAI,MAAAA,cAAc,CAACQ,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACI,IAAT,CAAcC,OAAd,CAAsBC,IAAjC,CAAD,CAAd;AACAd,MAAAA,UAAU,CAACQ,QAAQ,CAACI,IAAT,CAAcC,OAAd,CAAsBd,OAAtB,CAA8B,CAA9B,EAAiCgB,IAAlC,CAAV;AACAX,MAAAA,YAAY,CAACM,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACI,IAAT,CAAcC,OAAd,CAAsBG,UAAjC,CAAD,CAAZ;AACAV,MAAAA,WAAW,CAACE,QAAQ,CAACI,IAAT,CAAcC,OAAd,CAAsBd,OAAtB,CAA8B,CAA9B,EAAiCkB,IAAlC,CAAX;AACA,KAND,CAME,OAAOC,GAAP,EAAY;AACbC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA;AACD,GAVD,CAxB0B,CAoC1B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAA,qBAAKjB,WAAL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAA,oBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,gBAHD,eAIC;AAAA,oCAAgBI,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD,eAKC;AACC,UAAA,GAAG,EAAG,oCAAmCE,QAAS,SADnD;AAEC,UAAA,GAAG,EAAC;AAFL;AAAA;AAAA;AAAA;AAAA,gBALD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAWC;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cAXD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,kBADD;AAsBA,CAlED;;GAAMT,Y;;KAAAA,Y;AAoEN,eAAeA,YAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst ForecastTest = () => {\n\tconst apiKey = `a2e9f900ab03f983ca54c821ab03cb37`;\n\tconst url = `https://api.openweathermap.org/data/2.5/onecall?lat=55.9533&lon=3.1883&exclude={minutely,hourly,alerts}&appid=${apiKey}&units=metric`;\n\n\t// const [latitude, setLatitude] = useState(0);\n\t// const [longitude, setLongitude] = useState(0);\n\tconst [weather, setWeather] = useState(\"\");\n\tconst [temperature, setTemperature] = useState(0);\n\tconst [feelsLike, setFeelsLike] = useState(0);\n\tconst [iconCode, setIconCode] = useState(\"\");\n\n\t// const savePositionToState = (position) => {\n\t// \tsetLatitude(position.coords.latitude);\n\t// \tsetLongitude(position.coords.longitude);\n\t// };\n\n\t// const getLocation = async () => {\n\t// \tawait window.navigator.geolocation.getCurrentPosition(savePositionToState);\n\t// };\n\n\tuseEffect(() => {\n\t\tgetWeather();\n\t}, []);\n\n\tconst getWeather = async () => {\n\t\ttry {\n\t\t\tconst response = await axios.get(`${url}`);\n\t\t\tsetTemperature(Math.round(response.data.current.temp));\n\t\t\tsetWeather(response.data.current.weather[0].main);\n\t\t\tsetFeelsLike(Math.round(response.data.current.feels_like));\n\t\t\tsetIconCode(response.data.current.weather[0].icon);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t};\n\n\t// useEffect(() => {\n\t// \tif (longitude && latitude) getWeather();\n\t// }, [latitude, longitude]);\n\t// console.log(weather);\n\t// if (!temperature || !weather) {\n\t// \treturn <div className=\"container\">Weather loading...</div>;\n\t// }\n\n\treturn (\n\t\t<>\n\t\t\t<h1>The Weather</h1>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"cards\">\n\t\t\t\t\t<h2>EDINBURGH</h2>\n\t\t\t\t\t<h2>{temperature}ºC</h2>\n\t\t\t\t\t<h2>{weather}</h2>\n\t\t\t\t\t<h4>Feels like {feelsLike}ºC</h4>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={`http://openweathermap.org/img/wn/${iconCode}@2x.png`}\n\t\t\t\t\t\talt=\"weather icon\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<h2>Five day forecast</h2>\n\t\t\t\t\t<h2>TEMPERATURE</h2>\n\t\t\t\t\t<h2></h2>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default ForecastTest;\n"]},"metadata":{},"sourceType":"module"}