{"ast":null,"code":"var _jsxFileName = \"/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/src/components/HamburgerMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HamburgerMenu = () => {\n  _s();\n\n  const [showMenu, setShowMenu] = useState(false); //deciding whether we will show the menu. Menu always loads in closed.\n\n  let menu;\n  let menuMask;\n\n  if (showMenu) {\n    menu = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"burgerMenu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }, this);\n    menuMask = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuMask\",\n      onClick: () => setShowMenu(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this);\n  } //to make menu more pronounced\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"burgerIcon\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faBars,\n        size: \"2x\",\n        onClick: () => setShowMenu(!showMenu) //toggle\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), menuMask, menu]\n  }, void 0, true);\n};\n\n_s(HamburgerMenu, \"2FjIcsdimgVhm2IsUWodA2ftTZU=\");\n\n_c = HamburgerMenu;\nexport default HamburgerMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"HamburgerMenu\");","map":{"version":3,"sources":["/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/src/components/HamburgerMenu.jsx"],"names":["React","useState","FontAwesomeIcon","faBars","HamburgerMenu","showMenu","setShowMenu","menu","menuMask"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mCAAvB;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC,CAD2B,CACsB;;AACjD,MAAIM,IAAJ;AACA,MAAIC,QAAJ;;AAEA,MAAIH,QAAJ,EAAc;AACbE,IAAAA,IAAI,gBACH;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAMAC,IAAAA,QAAQ,gBACP;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,OAAO,EAAE,MAAMF,WAAW,CAAC,KAAD;AAApD;AAAA;AAAA;AAAA;AAAA,YADD;AAGA,GAf0B,CAezB;;;AAEF,sBACC;AAAA,4BACC;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA,6BACC,QAAC,eAAD;AACC,QAAA,IAAI,EAAEH,MADP;AAEC,QAAA,IAAI,EAAC,IAFN;AAGC,QAAA,OAAO,EAAE,MAAMG,WAAW,CAAC,CAACD,QAAF,CAH3B,CAGwC;;AAHxC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,EASEG,QATF,EAUED,IAVF;AAAA,kBADD;AAcA,CA/BD;;GAAMH,a;;KAAAA,a;AAiCN,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\n\nconst HamburgerMenu = () => {\n\tconst [showMenu, setShowMenu] = useState(false); //deciding whether we will show the menu. Menu always loads in closed.\n\tlet menu;\n\tlet menuMask;\n\n\tif (showMenu) {\n\t\tmenu = (\n\t\t\t<div className=\"burgerMenu\">\n\t\t\t\t<div></div>\n\t\t\t</div>\n\t\t);\n\n\t\tmenuMask = (\n\t\t\t<div className=\"menuMask\" onClick={() => setShowMenu(false)}></div>\n\t\t);\n\t} //to make menu more pronounced\n\n\treturn (\n\t\t<>\n\t\t\t<span className=\"burgerIcon\">\n\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\ticon={faBars}\n\t\t\t\t\tsize=\"2x\"\n\t\t\t\t\tonClick={() => setShowMenu(!showMenu)} //toggle\n\t\t\t\t/>\n\t\t\t</span>\n\n\t\t\t{menuMask}\n\t\t\t{menu}\n\t\t</>\n\t);\n};\n\nexport default HamburgerMenu;\n"]},"metadata":{},"sourceType":"module"}