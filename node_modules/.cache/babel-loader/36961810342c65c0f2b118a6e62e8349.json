{"ast":null,"code":"var _jsxFileName = \"/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/src/components/ReverseGeo.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ReverseGeo = () => {\n  _s();\n\n  const googleapiKey = `AIzaSyANa5ItcCEybBMv60dI-9_PUQT_dL1y0Ko`;\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [cityName, setCityName] = useState(\"\"); //Google Maps Reverse Geocode\n\n  const savePositionToState = position => {\n    setLatitude(position.coords.latitude);\n    setLongitude(position.coords.longitude);\n  };\n\n  const getLocation = async () => {\n    await window.navigator.geolocation.getCurrentPosition(savePositionToState);\n  };\n\n  useEffect(() => {\n    getLocation();\n  }, []);\n\n  const reverseGeo = async () => {\n    try {\n      const response = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${googleapiKey}`);\n      setCityName(response.data.results[0].address_components[2].long_name); //reverse geocoding the latlong\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (longitude && latitude) reverseGeo();\n  }, [latitude, longitude]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cityName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(ReverseGeo, \"pRuJ+fiJCSuIdZJ8uEwVDaLNlTc=\");\n\n_c = ReverseGeo;\nexport default ReverseGeo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReverseGeo\");","map":{"version":3,"sources":["/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/src/components/ReverseGeo.jsx"],"names":["useEffect","useState","axios","ReverseGeo","googleapiKey","latitude","setLatitude","longitude","setLongitude","cityName","setCityName","savePositionToState","position","coords","getLocation","window","navigator","geolocation","getCurrentPosition","reverseGeo","response","get","data","results","address_components","long_name","error","console"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACxB,QAAMC,YAAY,GAAI,yCAAtB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC,CAJwB,CAIsB;;AAE9C,QAAMU,mBAAmB,GAAIC,QAAD,IAAc;AACzCN,IAAAA,WAAW,CAACM,QAAQ,CAACC,MAAT,CAAgBR,QAAjB,CAAX;AACAG,IAAAA,YAAY,CAACI,QAAQ,CAACC,MAAT,CAAgBN,SAAjB,CAAZ;AACA,GAHD;;AAKA,QAAMO,WAAW,GAAG,YAAY;AAC/B,UAAMC,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CAAgDP,mBAAhD,CAAN;AACA,GAFD;;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACfc,IAAAA,WAAW;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMK,UAAU,GAAG,YAAY;AAC9B,QAAI;AACH,YAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CACrB,4DAA2DhB,QAAS,IAAGE,SAAU,QAAOH,YAAa,EADhF,CAAvB;AAGAM,MAAAA,WAAW,CAACU,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsB,CAAtB,EAAyBC,kBAAzB,CAA4C,CAA5C,EAA+CC,SAAhD,CAAX,CAJG,CAIoE;AACvE,KALD,CAKE,OAAOC,KAAP,EAAc;AACfC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA;AACD,GATD;;AAWA1B,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIO,SAAS,IAAIF,QAAjB,EAA2Bc,UAAU;AACrC,GAFQ,EAEN,CAACd,QAAD,EAAWE,SAAX,CAFM,CAAT;AAGA,sBACC;AAAA,2BACC;AAAA,gBAAME;AAAN;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAKA,CAtCD;;GAAMN,U;;KAAAA,U;AAwCN,eAAeA,UAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst ReverseGeo = () => {\n\tconst googleapiKey = `AIzaSyANa5ItcCEybBMv60dI-9_PUQT_dL1y0Ko`;\n\tconst [latitude, setLatitude] = useState(0);\n\tconst [longitude, setLongitude] = useState(0);\n\tconst [cityName, setCityName] = useState(\"\"); //Google Maps Reverse Geocode\n\n\tconst savePositionToState = (position) => {\n\t\tsetLatitude(position.coords.latitude);\n\t\tsetLongitude(position.coords.longitude);\n\t};\n\n\tconst getLocation = async () => {\n\t\tawait window.navigator.geolocation.getCurrentPosition(savePositionToState);\n\t};\n\n\tuseEffect(() => {\n\t\tgetLocation();\n\t}, []);\n\n\tconst reverseGeo = async () => {\n\t\ttry {\n\t\t\tconst response = await axios.get(\n\t\t\t\t`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${googleapiKey}`\n\t\t\t);\n\t\t\tsetCityName(response.data.results[0].address_components[2].long_name); //reverse geocoding the latlong\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (longitude && latitude) reverseGeo();\n\t}, [latitude, longitude]);\n\treturn (\n\t\t<>\n\t\t\t<div>{cityName}</div>\n\t\t</>\n\t);\n};\n\nexport default ReverseGeo;\n"]},"metadata":{},"sourceType":"module"}