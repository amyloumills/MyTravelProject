{"ast":null,"code":"var _jsxFileName = \"/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/src/components/Countdown.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStopwatch } from \"@fortawesome/free-solid-svg-icons\";\nimport SVGCircle from \"./SVGCircle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst countdownDate = new Date().getTime() + 86400000 * 3; //three days in the future. Has to be here as the function constantly updates the state\n\nconst Countdown = () => {\n  _s();\n\n  const [timerDays, setTimerDays] = useState(\"00\");\n  const [timerHours, setTimerHours] = useState(\"00\");\n  const [timerMinutes, setTimerMinutes] = useState(\"00\");\n  const [timerSeconds, setTimerSeconds] = useState(\"00\");\n  let interval = useRef();\n\n  const startTimer = () => {\n    interval = setInterval(() => {\n      const timeDifference = countdownDate - new Date().getTime(); //gets the time difference between now and the countdown date\n\n      const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24)); //unix time to days, etc\n\n      const hours = Math.floor(timeDifference % (1000 * 60 * 60 * 24) / (1000 * 60 * 60) // unix time to hours\n      );\n      const minutes = Math.floor(timeDifference % (1000 * 60 * 60) / (1000 * 60) //unix time to minutes\n      );\n      const seconds = Math.floor(timeDifference % (1000 * 60) / 1000); //unix time to seconds\n\n      if (timeDifference < 0) {\n        //stop timer\n        clearInterval(interval.current);\n      } else {\n        //update time\n        setTimerDays(days);\n        setTimerHours(hours);\n        setTimerMinutes(minutes);\n        setTimerSeconds(seconds);\n      }\n    }, 1000);\n  }; //componentdidmount\n\n\n  useEffect(() => {\n    startTimer();\n    return () => {\n      clearInterval(interval.current);\n    };\n  }); // //SVG CIRCLE - Working out the radius\n\n  const daysRadius = mapNumber(timerDays, 30, 0, 0, 360);\n  const hoursRadius = mapNumber(timerHours, 24, 0, 0, 360);\n  const minutesRadius = mapNumber(timerMinutes, 60, 0, 0, 360);\n  const secondsRadius = mapNumber(timerSeconds, 60, 0, 0, 360); // //if there are no seconds, return nothing\n\n  if (!timerSeconds) {\n    return 0;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"countdownHeader\",\n      children: \"Countdown...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      className: \"stopWatch\",\n      icon: faStopwatch,\n      size: \"2x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countdownContainer\",\n      children: [timerDays && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdownItem\",\n        children: [/*#__PURE__*/_jsxDEV(SVGCircle, {\n          radius: daysRadius\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this), timerDays, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 6\n      }, this), timerHours && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdownItem\",\n        children: [/*#__PURE__*/_jsxDEV(SVGCircle, {\n          radius: hoursRadius\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }, this), timerHours, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 6\n      }, this), timerMinutes && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdownItem\",\n        children: [/*#__PURE__*/_jsxDEV(SVGCircle, {\n          radius: minutesRadius\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }, this), timerMinutes, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 6\n      }, this), timerSeconds && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdownItem\",\n        children: [/*#__PURE__*/_jsxDEV(SVGCircle, {\n          radius: secondsRadius\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this), timerSeconds, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Seconds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Until your tour departs!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Countdown, \"L6w3BwUURqIftFOxWCmJmcOOO18=\");\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/src/components/Countdown.jsx"],"names":["React","useEffect","useRef","useState","FontAwesomeIcon","faStopwatch","SVGCircle","countdownDate","Date","getTime","Countdown","timerDays","setTimerDays","timerHours","setTimerHours","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","interval","startTimer","setInterval","timeDifference","days","Math","floor","hours","minutes","seconds","clearInterval","current","daysRadius","mapNumber","hoursRadius","minutesRadius","secondsRadius"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,aAAa,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,WAAW,CAAxD,C,CAA2D;;AAE3D,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,IAAD,CAAhD;AAEA,MAAIgB,QAAQ,GAAGjB,MAAM,EAArB;;AAEA,QAAMkB,UAAU,GAAG,MAAM;AACxBD,IAAAA,QAAQ,GAAGE,WAAW,CAAC,MAAM;AAC5B,YAAMC,cAAc,GAAGf,aAAa,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAvC,CAD4B,CACiC;;AAE7D,YAAMc,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,cAAc,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAzB,CAAb,CAH4B,CAGqC;;AACjE,YAAMI,KAAK,GAAGF,IAAI,CAACC,KAAL,CACZH,cAAc,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAf,IAA4C,OAAO,EAAP,GAAY,EAAxD,CADa,CAC+C;AAD/C,OAAd;AAGA,YAAMK,OAAO,GAAGH,IAAI,CAACC,KAAL,CACdH,cAAc,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAf,IAAuC,OAAO,EAA9C,CADe,CACmC;AADnC,OAAhB;AAGA,YAAMM,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAYH,cAAc,IAAI,OAAO,EAAX,CAAf,GAAiC,IAA5C,CAAhB,CAV4B,CAUuC;;AAEnE,UAAIA,cAAc,GAAG,CAArB,EAAwB;AACvB;AACAO,QAAAA,aAAa,CAACV,QAAQ,CAACW,OAAV,CAAb;AACA,OAHD,MAGO;AACN;AACAlB,QAAAA,YAAY,CAACW,IAAD,CAAZ;AACAT,QAAAA,aAAa,CAACY,KAAD,CAAb;AACAV,QAAAA,eAAe,CAACW,OAAD,CAAf;AACAT,QAAAA,eAAe,CAACU,OAAD,CAAf;AACA;AACD,KAtBqB,EAsBnB,IAtBmB,CAAtB;AAuBA,GAxBD,CARuB,CAiCvB;;;AACA3B,EAAAA,SAAS,CAAC,MAAM;AACfmB,IAAAA,UAAU;AACV,WAAO,MAAM;AACZS,MAAAA,aAAa,CAACV,QAAQ,CAACW,OAAV,CAAb;AACA,KAFD;AAGA,GALQ,CAAT,CAlCuB,CAyCvB;;AACA,QAAMC,UAAU,GAAGC,SAAS,CAACrB,SAAD,EAAY,EAAZ,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,GAAtB,CAA5B;AACA,QAAMsB,WAAW,GAAGD,SAAS,CAACnB,UAAD,EAAa,EAAb,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,GAAvB,CAA7B;AACA,QAAMqB,aAAa,GAAGF,SAAS,CAACjB,YAAD,EAAe,EAAf,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,GAAzB,CAA/B;AACA,QAAMoB,aAAa,GAAGH,SAAS,CAACf,YAAD,EAAe,EAAf,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,GAAzB,CAA/B,CA7CuB,CA+CvB;;AACA,MAAI,CAACA,YAAL,EAAmB;AAClB,WAAO,CAAP;AACA;;AAED,sBACC;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,WAA3B;AAAuC,MAAA,IAAI,EAAEZ,WAA7C;AAA0D,MAAA,IAAI,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,YAFD,eAIC;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,iBACEM,SAAS,iBACT;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACC,QAAC,SAAD;AAAW,UAAA,MAAM,EAAEoB;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADD,EAEEpB,SAFF,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAQEE,UAAU,iBACV;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACC,QAAC,SAAD;AAAW,UAAA,MAAM,EAAEoB;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADD,EAEEpB,UAFF,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,EAeEE,YAAY,iBACZ;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACC,QAAC,SAAD;AAAW,UAAA,MAAM,EAAEmB;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADD,EAEEnB,YAFF,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,EAsBEE,YAAY,iBACZ;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACC,QAAC,SAAD;AAAW,UAAA,MAAM,EAAEkB;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADD,EAEElB,YAFF,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAkCC;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAlCD;AAAA,kBADD;AAwCA,CA5FD;;GAAMP,S;;KAAAA,S;AA8FN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStopwatch } from \"@fortawesome/free-solid-svg-icons\";\nimport SVGCircle from \"./SVGCircle\";\n\nconst countdownDate = new Date().getTime() + 86400000 * 3; //three days in the future. Has to be here as the function constantly updates the state\n\nconst Countdown = () => {\n\tconst [timerDays, setTimerDays] = useState(\"00\");\n\tconst [timerHours, setTimerHours] = useState(\"00\");\n\tconst [timerMinutes, setTimerMinutes] = useState(\"00\");\n\tconst [timerSeconds, setTimerSeconds] = useState(\"00\");\n\n\tlet interval = useRef();\n\n\tconst startTimer = () => {\n\t\tinterval = setInterval(() => {\n\t\t\tconst timeDifference = countdownDate - new Date().getTime(); //gets the time difference between now and the countdown date\n\n\t\t\tconst days = Math.floor(timeDifference / (1000 * 60 * 60 * 24)); //unix time to days, etc\n\t\t\tconst hours = Math.floor(\n\t\t\t\t(timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60) // unix time to hours\n\t\t\t);\n\t\t\tconst minutes = Math.floor(\n\t\t\t\t(timeDifference % (1000 * 60 * 60)) / (1000 * 60) //unix time to minutes\n\t\t\t);\n\t\t\tconst seconds = Math.floor((timeDifference % (1000 * 60)) / 1000); //unix time to seconds\n\n\t\t\tif (timeDifference < 0) {\n\t\t\t\t//stop timer\n\t\t\t\tclearInterval(interval.current);\n\t\t\t} else {\n\t\t\t\t//update time\n\t\t\t\tsetTimerDays(days);\n\t\t\t\tsetTimerHours(hours);\n\t\t\t\tsetTimerMinutes(minutes);\n\t\t\t\tsetTimerSeconds(seconds);\n\t\t\t}\n\t\t}, 1000);\n\t};\n\t//componentdidmount\n\tuseEffect(() => {\n\t\tstartTimer();\n\t\treturn () => {\n\t\t\tclearInterval(interval.current);\n\t\t};\n\t});\n\n\t// //SVG CIRCLE - Working out the radius\n\tconst daysRadius = mapNumber(timerDays, 30, 0, 0, 360);\n\tconst hoursRadius = mapNumber(timerHours, 24, 0, 0, 360);\n\tconst minutesRadius = mapNumber(timerMinutes, 60, 0, 0, 360);\n\tconst secondsRadius = mapNumber(timerSeconds, 60, 0, 0, 360);\n\n\t// //if there are no seconds, return nothing\n\tif (!timerSeconds) {\n\t\treturn 0;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h2 className=\"countdownHeader\">Countdown...</h2>\n\t\t\t<FontAwesomeIcon className=\"stopWatch\" icon={faStopwatch} size=\"2x\" />\n\n\t\t\t<div className=\"countdownContainer\">\n\t\t\t\t{timerDays && (\n\t\t\t\t\t<div className=\"countdownItem\">\n\t\t\t\t\t\t<SVGCircle radius={daysRadius} />\n\t\t\t\t\t\t{timerDays}\n\t\t\t\t\t\t<span>Days</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{timerHours && (\n\t\t\t\t\t<div className=\"countdownItem\">\n\t\t\t\t\t\t<SVGCircle radius={hoursRadius} />\n\t\t\t\t\t\t{timerHours}\n\t\t\t\t\t\t<span>Hours</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{timerMinutes && (\n\t\t\t\t\t<div className=\"countdownItem\">\n\t\t\t\t\t\t<SVGCircle radius={minutesRadius} />\n\t\t\t\t\t\t{timerMinutes}\n\t\t\t\t\t\t<span>Minutes</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{timerSeconds && (\n\t\t\t\t\t<div className=\"countdownItem\">\n\t\t\t\t\t\t<SVGCircle radius={secondsRadius} />\n\t\t\t\t\t\t{timerSeconds}\n\t\t\t\t\t\t<span>Seconds</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<p>Until your tour departs!</p>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Countdown;\n"]},"metadata":{},"sourceType":"module"}