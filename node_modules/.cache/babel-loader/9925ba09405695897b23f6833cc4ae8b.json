{"ast":null,"code":"var _jsxFileName = \"/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/src/components/SVGCircle.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SVGCircle = ({\n  radius\n}) => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"countdownSVG\",\n  children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n    children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n      id: \"myGradient\",\n      gradientTransform: \"rotate(90)\",\n      children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n        offset: \"5%\",\n        stopColor: \"#bdb0bd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n        offset: \"95%\",\n        stopColor: \"#754d78\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n    fill: \"none\",\n    stroke: \"url('#myGradient')\",\n    strokeWidth: \"4\",\n    d: describeArc(50, 50, 48, 0, radius)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 2\n}, this); // from StackOverflow - to map the date values to their corresponding radius\n\n\n_c = SVGCircle;\n\nfunction mapNumber(number, inMin, inMax, outMin, outMax) {\n  return (number - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\n} //calculation taken from Stackoverflow to calculate the SVG path for the arc of a circle\n\n\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians)\n  };\n}\n\nfunction describeArc(x, y, radius, startAngle, endAngle) {\n  var start = polarToCartesian(x, y, radius, endAngle);\n  var end = polarToCartesian(x, y, radius, startAngle);\n  var largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n  var d = [\"M\", start.x, start.y, \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y].join(\" \");\n  return d;\n}\n\nexport default SVGCircle;\n\nvar _c;\n\n$RefreshReg$(_c, \"SVGCircle\");","map":{"version":3,"sources":["/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/src/components/SVGCircle.jsx"],"names":["React","SVGCircle","radius","describeArc","mapNumber","number","inMin","inMax","outMin","outMax","polarToCartesian","centerX","centerY","angleInDegrees","angleInRadians","Math","PI","x","cos","y","sin","startAngle","endAngle","start","end","largeArcFlag","d","join"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACjB;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA,0BACC;AAAA,2BACC;AAAgB,MAAA,EAAE,EAAC,YAAnB;AAAgC,MAAA,iBAAiB,EAAC,YAAlD;AAAA,8BACC;AAAM,QAAA,MAAM,EAAC,IAAb;AAAkB,QAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAM,QAAA,MAAM,EAAC,KAAb;AAAmB,QAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD,eAOC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,MAAM,EAAC,oBAFR;AAGC,IAAA,WAAW,EAAC,GAHb;AAIC,IAAA,CAAC,EAAEC,WAAW,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgBD,MAAhB;AAJf;AAAA;AAAA;AAAA;AAAA,UAPD;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,C,CAiBA;;;KAjBMD,S;;AAkBN,SAASG,SAAT,CAAmBC,MAAnB,EAA2BC,KAA3B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,MAAjD,EAAyD;AACxD,SAAQ,CAACJ,MAAM,GAAGC,KAAV,KAAoBG,MAAM,GAAGD,MAA7B,CAAD,IAA0CD,KAAK,GAAGD,KAAlD,IAA2DE,MAAlE;AACA,C,CACD;;;AACA,SAASE,gBAAT,CAA0BC,OAA1B,EAAmCC,OAAnC,EAA4CV,MAA5C,EAAoDW,cAApD,EAAoE;AACnE,MAAIC,cAAc,GAAI,CAACD,cAAc,GAAG,EAAlB,IAAwBE,IAAI,CAACC,EAA9B,GAAoC,KAAzD;AAEA,SAAO;AACNC,IAAAA,CAAC,EAAEN,OAAO,GAAGT,MAAM,GAAGa,IAAI,CAACG,GAAL,CAASJ,cAAT,CADhB;AAENK,IAAAA,CAAC,EAAEP,OAAO,GAAGV,MAAM,GAAGa,IAAI,CAACK,GAAL,CAASN,cAAT;AAFhB,GAAP;AAIA;;AAED,SAASX,WAAT,CAAqBc,CAArB,EAAwBE,CAAxB,EAA2BjB,MAA3B,EAAmCmB,UAAnC,EAA+CC,QAA/C,EAAyD;AACxD,MAAIC,KAAK,GAAGb,gBAAgB,CAACO,CAAD,EAAIE,CAAJ,EAAOjB,MAAP,EAAeoB,QAAf,CAA5B;AACA,MAAIE,GAAG,GAAGd,gBAAgB,CAACO,CAAD,EAAIE,CAAJ,EAAOjB,MAAP,EAAemB,UAAf,CAA1B;AAEA,MAAII,YAAY,GAAGH,QAAQ,GAAGD,UAAX,IAAyB,GAAzB,GAA+B,GAA/B,GAAqC,GAAxD;AAEA,MAAIK,CAAC,GAAG,CACP,GADO,EAEPH,KAAK,CAACN,CAFC,EAGPM,KAAK,CAACJ,CAHC,EAIP,GAJO,EAKPjB,MALO,EAMPA,MANO,EAOP,CAPO,EAQPuB,YARO,EASP,CATO,EAUPD,GAAG,CAACP,CAVG,EAWPO,GAAG,CAACL,CAXG,EAYNQ,IAZM,CAYD,GAZC,CAAR;AAcA,SAAOD,CAAP;AACA;;AAED,eAAezB,SAAf","sourcesContent":["import React from \"react\";\n\nconst SVGCircle = ({ radius }) => (\n\t<svg className=\"countdownSVG\">\n\t\t<defs>\n\t\t\t<linearGradient id=\"myGradient\" gradientTransform=\"rotate(90)\">\n\t\t\t\t<stop offset=\"5%\" stopColor=\"#bdb0bd\" />\n\t\t\t\t<stop offset=\"95%\" stopColor=\"#754d78\" />\n\t\t\t</linearGradient>\n\t\t</defs>\n\t\t<path\n\t\t\tfill=\"none\"\n\t\t\tstroke=\"url('#myGradient')\"\n\t\t\tstrokeWidth=\"4\"\n\t\t\td={describeArc(50, 50, 48, 0, radius)}\n\t\t/>\n\t</svg>\n);\n\n// from StackOverflow - to map the date values to their corresponding radius\nfunction mapNumber(number, inMin, inMax, outMin, outMax) {\n\treturn ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n}\n//calculation taken from Stackoverflow to calculate the SVG path for the arc of a circle\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n\tvar angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n\n\treturn {\n\t\tx: centerX + radius * Math.cos(angleInRadians),\n\t\ty: centerY + radius * Math.sin(angleInRadians),\n\t};\n}\n\nfunction describeArc(x, y, radius, startAngle, endAngle) {\n\tvar start = polarToCartesian(x, y, radius, endAngle);\n\tvar end = polarToCartesian(x, y, radius, startAngle);\n\n\tvar largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n\n\tvar d = [\n\t\t\"M\",\n\t\tstart.x,\n\t\tstart.y,\n\t\t\"A\",\n\t\tradius,\n\t\tradius,\n\t\t0,\n\t\tlargeArcFlag,\n\t\t0,\n\t\tend.x,\n\t\tend.y,\n\t].join(\" \");\n\n\treturn d;\n}\n\nexport default SVGCircle;\n"]},"metadata":{},"sourceType":"module"}