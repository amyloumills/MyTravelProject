{"ast":null,"code":"var _jsxFileName = \"/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/src/components/HamburgerMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { useSpring } from \"react-spring\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HamburgerMenu = () => {\n  _s();\n\n  const [showMenu, setShowMenu] = useState(false); //deciding whether we will show the menu. Menu always loads in closed.\n\n  let menu;\n  let menuMask;\n  const menuAnimation = useSpring({\n    opacity: showMenu ? 1 : 0,\n    transform: showMenu ? `translateX(0)` : `translateX(100%)`\n  });\n\n  if (showMenu) {\n    menu = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"burgerMenu\",\n      children: \"The Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }, this);\n    menuMask = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuMask\",\n      onClick: () => setShowMenu(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this);\n  } //to make menu more pronounced\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"burgerIcon\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faBars,\n        size: \"2x\",\n        onClick: () => setShowMenu(!showMenu) //toggle\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      style: menuAnimation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), menuMask, menu]\n  }, void 0, true);\n};\n\n_s(HamburgerMenu, \"++fB/8dS5/TEsdJkNAg3UIhf9cs=\", false, function () {\n  return [useSpring];\n});\n\n_c = HamburgerMenu;\nexport default HamburgerMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"HamburgerMenu\");","map":{"version":3,"sources":["/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/src/components/HamburgerMenu.jsx"],"names":["React","useState","FontAwesomeIcon","faBars","useSpring","HamburgerMenu","showMenu","setShowMenu","menu","menuMask","menuAnimation","opacity","transform"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,SAASC,SAAT,QAA0B,cAA1B;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC,CAD2B,CACsB;;AACjD,MAAIO,IAAJ;AACA,MAAIC,QAAJ;AAEA,QAAMC,aAAa,GAAGN,SAAS,CAAC;AAC/BO,IAAAA,OAAO,EAAEL,QAAQ,GAAG,CAAH,GAAO,CADO;AAE/BM,IAAAA,SAAS,EAAEN,QAAQ,GAAI,eAAJ,GAAsB;AAFV,GAAD,CAA/B;;AAKA,MAAIA,QAAJ,EAAc;AACbE,IAAAA,IAAI,gBAAG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAEAC,IAAAA,QAAQ,gBACP;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,OAAO,EAAE,MAAMF,WAAW,CAAC,KAAD;AAApD;AAAA;AAAA;AAAA;AAAA,YADD;AAGA,GAhB0B,CAgBzB;;;AAEF,sBACC;AAAA,4BACC;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA,6BACC,QAAC,eAAD;AACC,QAAA,IAAI,EAAEJ,MADP;AAEC,QAAA,IAAI,EAAC,IAFN;AAGC,QAAA,OAAO,EAAE,MAAMI,WAAW,CAAC,CAACD,QAAF,CAH3B,CAGwC;;AAHxC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAQC,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEI;AAAb;AAAA;AAAA;AAAA;AAAA,YARD,EASED,QATF,EAUED,IAVF;AAAA,kBADD;AAcA,CAhCD;;GAAMH,a;UAKiBD,S;;;KALjBC,a;AAkCN,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { useSpring } from \"react-spring\";\n\nconst HamburgerMenu = () => {\n\tconst [showMenu, setShowMenu] = useState(false); //deciding whether we will show the menu. Menu always loads in closed.\n\tlet menu;\n\tlet menuMask;\n\n\tconst menuAnimation = useSpring({\n\t\topacity: showMenu ? 1 : 0,\n\t\ttransform: showMenu ? `translateX(0)` : `translateX(100%)`,\n\t});\n\n\tif (showMenu) {\n\t\tmenu = <div className=\"burgerMenu\">The Menu</div>;\n\n\t\tmenuMask = (\n\t\t\t<div className=\"menuMask\" onClick={() => setShowMenu(false)}></div>\n\t\t);\n\t} //to make menu more pronounced\n\n\treturn (\n\t\t<>\n\t\t\t<span className=\"burgerIcon\">\n\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\ticon={faBars}\n\t\t\t\t\tsize=\"2x\"\n\t\t\t\t\tonClick={() => setShowMenu(!showMenu)} //toggle\n\t\t\t\t/>\n\t\t\t</span>\n\t\t\t<Menu style={menuAnimation} />\n\t\t\t{menuMask}\n\t\t\t{menu}\n\t\t</>\n\t);\n};\n\nexport default HamburgerMenu;\n"]},"metadata":{},"sourceType":"module"}