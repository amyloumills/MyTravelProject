{"ast":null,"code":"var _jsxFileName = \"/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/src/components/Countdown.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Countdown = () => {\n  _s();\n\n  const [timerDays, setTimerDays] = useState(\"00\");\n  const [timerHours, setTimerHours] = useState(\"00\");\n  const [timerMinutes, setTimerMinutes] = useState(\"00\");\n  const [timerSeconds, setTimerSeconds] = useState(\"00\");\n  let interval = useRef();\n\n  const startTimer = () => {\n    const countdownDate = new Date(\"Dec 1, 2021 00:00:00\").getTime();\n    interval = setInterval(() => {\n      const timeNow = new Date().getTime();\n      const timeDifference = countdownDate - timeNow; //gets the time difference between now and the countdown date\n\n      const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(timeDifference % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      const minutes = Math.floor(timeDifference % (1000 * 60 * 60) / (1000 * 60));\n      const seconds = Math.floor(timeDifference % (1000 * 60) / 1000);\n\n      if (timeDifference < 0) {\n        //stop timer\n        clearInterval(interval.current);\n      } else {\n        //update time\n        setTimerDays(days);\n        setTimerHours(hours);\n        setTimerMinutes(minutes);\n        setTimerSeconds(seconds);\n      }\n    }, 1000);\n  }; //componentdidmount\n\n\n  useEffect(() => {\n    startTimer();\n    return () => {\n      clearInterval(interval.current);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: timerDays\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(Countdown, \"L6w3BwUURqIftFOxWCmJmcOOO18=\");\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/src/components/Countdown.jsx"],"names":["React","useEffect","useRef","useState","Countdown","timerDays","setTimerDays","timerHours","setTimerHours","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","interval","startTimer","countdownDate","Date","getTime","setInterval","timeNow","timeDifference","days","Math","floor","hours","minutes","seconds","clearInterval","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;AAEA,MAAIU,QAAQ,GAAGX,MAAM,EAArB;;AAEA,QAAMY,UAAU,GAAG,MAAM;AACxB,UAAMC,aAAa,GAAG,IAAIC,IAAJ,CAAS,sBAAT,EAAiCC,OAAjC,EAAtB;AAEAJ,IAAAA,QAAQ,GAAGK,WAAW,CAAC,MAAM;AAC5B,YAAMC,OAAO,GAAG,IAAIH,IAAJ,GAAWC,OAAX,EAAhB;AACA,YAAMG,cAAc,GAAGL,aAAa,GAAGI,OAAvC,CAF4B,CAEoB;;AAEhD,YAAME,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,cAAc,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAzB,CAAb;AACA,YAAMI,KAAK,GAAGF,IAAI,CAACC,KAAL,CACZH,cAAc,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAf,IAA4C,OAAO,EAAP,GAAY,EAAxD,CADa,CAAd;AAGA,YAAMK,OAAO,GAAGH,IAAI,CAACC,KAAL,CACdH,cAAc,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAf,IAAuC,OAAO,EAA9C,CADe,CAAhB;AAGA,YAAMM,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAYH,cAAc,IAAI,OAAO,EAAX,CAAf,GAAiC,IAA5C,CAAhB;;AAEA,UAAIA,cAAc,GAAG,CAArB,EAAwB;AACvB;AACAO,QAAAA,aAAa,CAACd,QAAQ,CAACe,OAAV,CAAb;AACA,OAHD,MAGO;AACN;AACAtB,QAAAA,YAAY,CAACe,IAAD,CAAZ;AACAb,QAAAA,aAAa,CAACgB,KAAD,CAAb;AACAd,QAAAA,eAAe,CAACe,OAAD,CAAf;AACAb,QAAAA,eAAe,CAACc,OAAD,CAAf;AACA;AACD,KAvBqB,EAuBnB,IAvBmB,CAAtB;AAwBA,GA3BD,CARuB,CAoCvB;;;AACAzB,EAAAA,SAAS,CAAC,MAAM;AACfa,IAAAA,UAAU;AACV,WAAO,MAAM;AACZa,MAAAA,aAAa,CAACd,QAAQ,CAACe,OAAV,CAAb;AACA,KAFD;AAGA,GALQ,CAAT;AAOA,sBACC;AAAA,2BACC;AAAA,6BACC;AAAA,gCACC;AAAA,oBAAIvB;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAUA,CAtDD;;GAAMD,S;;KAAAA,S;AAwDN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nconst Countdown = () => {\n\tconst [timerDays, setTimerDays] = useState(\"00\");\n\tconst [timerHours, setTimerHours] = useState(\"00\");\n\tconst [timerMinutes, setTimerMinutes] = useState(\"00\");\n\tconst [timerSeconds, setTimerSeconds] = useState(\"00\");\n\n\tlet interval = useRef();\n\n\tconst startTimer = () => {\n\t\tconst countdownDate = new Date(\"Dec 1, 2021 00:00:00\").getTime();\n\n\t\tinterval = setInterval(() => {\n\t\t\tconst timeNow = new Date().getTime();\n\t\t\tconst timeDifference = countdownDate - timeNow; //gets the time difference between now and the countdown date\n\n\t\t\tconst days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n\t\t\tconst hours = Math.floor(\n\t\t\t\t(timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n\t\t\t);\n\t\t\tconst minutes = Math.floor(\n\t\t\t\t(timeDifference % (1000 * 60 * 60)) / (1000 * 60)\n\t\t\t);\n\t\t\tconst seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);\n\n\t\t\tif (timeDifference < 0) {\n\t\t\t\t//stop timer\n\t\t\t\tclearInterval(interval.current);\n\t\t\t} else {\n\t\t\t\t//update time\n\t\t\t\tsetTimerDays(days);\n\t\t\t\tsetTimerHours(hours);\n\t\t\t\tsetTimerMinutes(minutes);\n\t\t\t\tsetTimerSeconds(seconds);\n\t\t\t}\n\t\t}, 1000);\n\t};\n\t//componentdidmount\n\tuseEffect(() => {\n\t\tstartTimer();\n\t\treturn () => {\n\t\t\tclearInterval(interval.current);\n\t\t};\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<div>\n\t\t\t\t<section>\n\t\t\t\t\t<p>{timerDays}</p>\n\t\t\t\t\t<p>Days</p>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Countdown;\n"]},"metadata":{},"sourceType":"module"}