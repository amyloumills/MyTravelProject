{"ast":null,"code":"var _jsxFileName = \"/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/src/components/Countdown.jsx\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStopwatch } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Countdown = ({\n  timerDays,\n  timerHours,\n  timerMinutes,\n  timerSeconds\n}) => {\n  //SVG CIRCLE - Working out the radius\n  const daysRadius = mapNumber(timerDays, 30, 0, 50, 360);\n  const hoursRadius = mapNumber(timerHours, 24, 0, 0, 360);\n  const minutesRadius = mapNumber(timerMinutes, 60, 0, 0, 360);\n  const secondsRadius = mapNumber(timerSeconds, 60, 0, 0, 360);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"countdownHeader\",\n      children: \"Countdown...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      className: \"stopWatch\",\n      icon: faStopwatch,\n      size: \"2x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countdownContainer\",\n      children: [timerDays >= 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdownItem\",\n        children: [/*#__PURE__*/_jsxDEV(SVGCircle, {\n          radius: daysRadius\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }, this), timerDays, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 6\n      }, this), timerHours >= 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdownItem\",\n        children: [/*#__PURE__*/_jsxDEV(SVGCircle, {\n          radius: hoursRadius\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }, this), timerHours, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 6\n      }, this), timerMinutes >= 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdownItem\",\n        children: [/*#__PURE__*/_jsxDEV(SVGCircle, {\n          radius: minutesRadius\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this), timerMinutes, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 6\n      }, this), timerSeconds >= 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdownItem\",\n        children: [/*#__PURE__*/_jsxDEV(SVGCircle, {\n          radius: secondsRadius\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this), Math.round(timerSeconds), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Seconds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Until your tour departs!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}; //code for displaying the SVG\n\n\n_c = Countdown;\n\nconst SVGCircle = ({\n  radius\n}) => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"countdownSVG\",\n  children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n    children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n      id: \"myGradient\",\n      gradientTransform: \"rotate(90)\",\n      children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n        offset: \"5%\",\n        stopColor: \"#bdb0bd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n        offset: \"95%\",\n        stopColor: \"#754d78\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n    fill: \"none\",\n    stroke: \"url('#myGradient')\",\n    strokeWidth: \"4\",\n    d: describeArc(50, 50, 48, 0, radius)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 2\n}, this); // from StackOverflow - to map the date values to their corresponding radius\n\n\n_c2 = SVGCircle;\n\nfunction mapNumber(number, inMin, inMax, outMin, outMax) {\n  return (number - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\n} //calculation taken from Stackoverflow to calculate the SVG path for the arc of a circle\n\n\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians)\n  };\n}\n\nfunction describeArc(x, y, radius, startAngle, endAngle) {\n  var start = polarToCartesian(x, y, radius, endAngle);\n  var end = polarToCartesian(x, y, radius, startAngle);\n  var largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n  var d = [\"M\", start.x, start.y, \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y].join(\" \");\n  return d;\n}\n\nexport default Countdown;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Countdown\");\n$RefreshReg$(_c2, \"SVGCircle\");","map":{"version":3,"sources":["/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/src/components/Countdown.jsx"],"names":["React","FontAwesomeIcon","faStopwatch","Countdown","timerDays","timerHours","timerMinutes","timerSeconds","daysRadius","mapNumber","hoursRadius","minutesRadius","secondsRadius","Math","round","SVGCircle","radius","describeArc","number","inMin","inMax","outMin","outMax","polarToCartesian","centerX","centerY","angleInDegrees","angleInRadians","PI","x","cos","y","sin","startAngle","endAngle","start","end","largeArcFlag","d","join"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,QAA4B,mCAA5B;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,UAAb;AAAyBC,EAAAA,YAAzB;AAAuCC,EAAAA;AAAvC,CAAD,KAA2D;AAC5E;AACA,QAAMC,UAAU,GAAGC,SAAS,CAACL,SAAD,EAAY,EAAZ,EAAgB,CAAhB,EAAmB,EAAnB,EAAuB,GAAvB,CAA5B;AACA,QAAMM,WAAW,GAAGD,SAAS,CAACJ,UAAD,EAAa,EAAb,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,GAAvB,CAA7B;AACA,QAAMM,aAAa,GAAGF,SAAS,CAACH,YAAD,EAAe,EAAf,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,GAAzB,CAA/B;AACA,QAAMM,aAAa,GAAGH,SAAS,CAACF,YAAD,EAAe,EAAf,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,GAAzB,CAA/B;AAEA,sBACC;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,WAA3B;AAAuC,MAAA,IAAI,EAAEL,WAA7C;AAA0D,MAAA,IAAI,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,YAFD,eAIC;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,iBACEE,SAAS,IAAI,CAAb,iBACA;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACC,QAAC,SAAD;AAAW,UAAA,MAAM,EAAEI;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADD,EAEEJ,SAFF,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAQEC,UAAU,IAAI,CAAd,iBACA;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACC,QAAC,SAAD;AAAW,UAAA,MAAM,EAAEK;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADD,EAEEL,UAFF,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,EAeEC,YAAY,IAAI,CAAhB,iBACA;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACC,QAAC,SAAD;AAAW,UAAA,MAAM,EAAEK;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADD,EAEEL,YAFF,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,EAsBEC,YAAY,IAAI,CAAhB,iBACA;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACC,QAAC,SAAD;AAAW,UAAA,MAAM,EAAEK;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADD,EAEEC,IAAI,CAACC,KAAL,CAAWP,YAAX,CAFF,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAkCC;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAlCD;AAAA,kBADD;AAwCA,CA/CD,C,CAgDA;;;KAhDMJ,S;;AAiDN,MAAMY,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACjB;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA,0BACC;AAAA,2BACC;AAAgB,MAAA,EAAE,EAAC,YAAnB;AAAgC,MAAA,iBAAiB,EAAC,YAAlD;AAAA,8BACC;AAAM,QAAA,MAAM,EAAC,IAAb;AAAkB,QAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAM,QAAA,MAAM,EAAC,KAAb;AAAmB,QAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD,eAOC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,MAAM,EAAC,oBAFR;AAGC,IAAA,WAAW,EAAC,GAHb;AAIC,IAAA,CAAC,EAAEC,WAAW,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgBD,MAAhB;AAJf;AAAA;AAAA;AAAA;AAAA,UAPD;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,C,CAiBA;;;MAjBMD,S;;AAkBN,SAASN,SAAT,CAAmBS,MAAnB,EAA2BC,KAA3B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,MAAjD,EAAyD;AACxD,SAAQ,CAACJ,MAAM,GAAGC,KAAV,KAAoBG,MAAM,GAAGD,MAA7B,CAAD,IAA0CD,KAAK,GAAGD,KAAlD,IAA2DE,MAAlE;AACA,C,CACD;;;AACA,SAASE,gBAAT,CAA0BC,OAA1B,EAAmCC,OAAnC,EAA4CT,MAA5C,EAAoDU,cAApD,EAAoE;AACnE,MAAIC,cAAc,GAAI,CAACD,cAAc,GAAG,EAAlB,IAAwBb,IAAI,CAACe,EAA9B,GAAoC,KAAzD;AAEA,SAAO;AACNC,IAAAA,CAAC,EAAEL,OAAO,GAAGR,MAAM,GAAGH,IAAI,CAACiB,GAAL,CAASH,cAAT,CADhB;AAENI,IAAAA,CAAC,EAAEN,OAAO,GAAGT,MAAM,GAAGH,IAAI,CAACmB,GAAL,CAASL,cAAT;AAFhB,GAAP;AAIA;;AAED,SAASV,WAAT,CAAqBY,CAArB,EAAwBE,CAAxB,EAA2Bf,MAA3B,EAAmCiB,UAAnC,EAA+CC,QAA/C,EAAyD;AACxD,MAAIC,KAAK,GAAGZ,gBAAgB,CAACM,CAAD,EAAIE,CAAJ,EAAOf,MAAP,EAAekB,QAAf,CAA5B;AACA,MAAIE,GAAG,GAAGb,gBAAgB,CAACM,CAAD,EAAIE,CAAJ,EAAOf,MAAP,EAAeiB,UAAf,CAA1B;AAEA,MAAII,YAAY,GAAGH,QAAQ,GAAGD,UAAX,IAAyB,GAAzB,GAA+B,GAA/B,GAAqC,GAAxD;AAEA,MAAIK,CAAC,GAAG,CACP,GADO,EAEPH,KAAK,CAACN,CAFC,EAGPM,KAAK,CAACJ,CAHC,EAIP,GAJO,EAKPf,MALO,EAMPA,MANO,EAOP,CAPO,EAQPqB,YARO,EASP,CATO,EAUPD,GAAG,CAACP,CAVG,EAWPO,GAAG,CAACL,CAXG,EAYNQ,IAZM,CAYD,GAZC,CAAR;AAcA,SAAOD,CAAP;AACA;;AACD,eAAenC,SAAf","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStopwatch } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Countdown = ({ timerDays, timerHours, timerMinutes, timerSeconds }) => {\n\t//SVG CIRCLE - Working out the radius\n\tconst daysRadius = mapNumber(timerDays, 30, 0, 50, 360);\n\tconst hoursRadius = mapNumber(timerHours, 24, 0, 0, 360);\n\tconst minutesRadius = mapNumber(timerMinutes, 60, 0, 0, 360);\n\tconst secondsRadius = mapNumber(timerSeconds, 60, 0, 0, 360);\n\n\treturn (\n\t\t<>\n\t\t\t<h2 className=\"countdownHeader\">Countdown...</h2>\n\t\t\t<FontAwesomeIcon className=\"stopWatch\" icon={faStopwatch} size=\"2x\" />\n\n\t\t\t<div className=\"countdownContainer\">\n\t\t\t\t{timerDays >= 0 && (\n\t\t\t\t\t<div className=\"countdownItem\">\n\t\t\t\t\t\t<SVGCircle radius={daysRadius} />\n\t\t\t\t\t\t{timerDays}\n\t\t\t\t\t\t<span>Days</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{timerHours >= 0 && (\n\t\t\t\t\t<div className=\"countdownItem\">\n\t\t\t\t\t\t<SVGCircle radius={hoursRadius} />\n\t\t\t\t\t\t{timerHours}\n\t\t\t\t\t\t<span>Hours</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{timerMinutes >= 0 && (\n\t\t\t\t\t<div className=\"countdownItem\">\n\t\t\t\t\t\t<SVGCircle radius={minutesRadius} />\n\t\t\t\t\t\t{timerMinutes}\n\t\t\t\t\t\t<span>Minutes</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{timerSeconds >= 0 && (\n\t\t\t\t\t<div className=\"countdownItem\">\n\t\t\t\t\t\t<SVGCircle radius={secondsRadius} />\n\t\t\t\t\t\t{Math.round(timerSeconds)}\n\t\t\t\t\t\t<span>Seconds</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<p>Until your tour departs!</p>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n//code for displaying the SVG\nconst SVGCircle = ({ radius }) => (\n\t<svg className=\"countdownSVG\">\n\t\t<defs>\n\t\t\t<linearGradient id=\"myGradient\" gradientTransform=\"rotate(90)\">\n\t\t\t\t<stop offset=\"5%\" stopColor=\"#bdb0bd\" />\n\t\t\t\t<stop offset=\"95%\" stopColor=\"#754d78\" />\n\t\t\t</linearGradient>\n\t\t</defs>\n\t\t<path\n\t\t\tfill=\"none\"\n\t\t\tstroke=\"url('#myGradient')\"\n\t\t\tstrokeWidth=\"4\"\n\t\t\td={describeArc(50, 50, 48, 0, radius)}\n\t\t/>\n\t</svg>\n);\n\n// from StackOverflow - to map the date values to their corresponding radius\nfunction mapNumber(number, inMin, inMax, outMin, outMax) {\n\treturn ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n}\n//calculation taken from Stackoverflow to calculate the SVG path for the arc of a circle\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n\tvar angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n\n\treturn {\n\t\tx: centerX + radius * Math.cos(angleInRadians),\n\t\ty: centerY + radius * Math.sin(angleInRadians),\n\t};\n}\n\nfunction describeArc(x, y, radius, startAngle, endAngle) {\n\tvar start = polarToCartesian(x, y, radius, endAngle);\n\tvar end = polarToCartesian(x, y, radius, startAngle);\n\n\tvar largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n\n\tvar d = [\n\t\t\"M\",\n\t\tstart.x,\n\t\tstart.y,\n\t\t\"A\",\n\t\tradius,\n\t\tradius,\n\t\t0,\n\t\tlargeArcFlag,\n\t\t0,\n\t\tend.x,\n\t\tend.y,\n\t].join(\" \");\n\n\treturn d;\n}\nexport default Countdown;\n"]},"metadata":{},"sourceType":"module"}