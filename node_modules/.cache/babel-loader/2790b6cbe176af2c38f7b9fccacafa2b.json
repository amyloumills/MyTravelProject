{"ast":null,"code":"var _jsxFileName = \"/Users/amymiller/Desktop/Cohort 6/React/Project/weather/src/components/weather.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Weather = () => {\n  _s();\n\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [weather, setWeather] = useState(\"\");\n  const [temperature, setTemperature] = useState(0);\n  const [cityName, setCityName] = useState(\"\");\n  const [feelsLike, setFeelsLike] = useState(0);\n  const [iconCode, setIconCode] = useState(\"\");\n\n  const savePositionToState = position => {\n    setLatitude(position.coords.latitude);\n    setLongitude(position.coords.longitude);\n  };\n\n  const getLocation = async () => {\n    await window.navigator.geolocation.getCurrentPosition(savePositionToState);\n  };\n\n  useEffect(() => {\n    getLocation();\n  }, []);\n\n  const getWeather = async () => {\n    try {\n      const res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=a2e9f900ab03f983ca54c821ab03cb37&units=metric`);\n      setTemperature(Math.round(res.data.main.temp));\n      setCityName(res.data.name);\n      setWeather(res.data.weather[0].main);\n      setFeelsLike(Math.round(res.data.main.feels_like));\n      setIconCode(res.data.weather[0].icon);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    getWeather();\n  }, [latitude, longitude]); //conditional return here\n\n  console.log(weather);\n\n  if (!cityName || !temperature || !weather || !latitude || !longitude) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: cityName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [temperature, \"\\xBAC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Feels like \", feelsLike, \"\\xBAC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://openweathermap.org/img/wn/${iconCode}@2x.png`,\n          alt: \"weather icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Weather, \"9HZGVRYivMzcIRREnvSQ3TdrHsE=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/amymiller/Desktop/Cohort 6/React/Project/weather/src/components/weather.jsx"],"names":["useEffect","useState","axios","Weather","latitude","setLatitude","longitude","setLongitude","weather","setWeather","temperature","setTemperature","cityName","setCityName","feelsLike","setFeelsLike","iconCode","setIconCode","savePositionToState","position","coords","getLocation","window","navigator","geolocation","getCurrentPosition","getWeather","res","get","Math","round","data","main","temp","name","feels_like","icon","err","console","error","log"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst Weather = () => {\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [weather, setWeather] = useState(\"\");\n  const [temperature, setTemperature] = useState(0);\n  const [cityName, setCityName] = useState(\"\");\n  const [feelsLike, setFeelsLike] = useState(0);\n  const [iconCode, setIconCode] = useState(\"\");\n\n  const savePositionToState = (position) => {\n    setLatitude(position.coords.latitude);\n    setLongitude(position.coords.longitude);\n  };\n\n  const getLocation = async () => {\n    await window.navigator.geolocation.getCurrentPosition(\n      savePositionToState,\n    );\n  } \n  useEffect(() => {\n    getLocation();\n  },[])\n\n  const getWeather = async () => {\n    try {\n\n      const res = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=a2e9f900ab03f983ca54c821ab03cb37&units=metric`,\n      );\n      setTemperature(Math.round(res.data.main.temp));\n      setCityName(res.data.name);\n      setWeather(res.data.weather[0].main);\n      setFeelsLike(Math.round(res.data.main.feels_like));\n      setIconCode(res.data.weather[0].icon);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    getWeather();\n  }, [latitude, longitude]);\n//conditional return here\nconsole.log(weather)\n if (!cityName || !temperature || !weather || !latitude || !longitude) {\nreturn <div className=\"container\">Loading...</div>\n }\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"cards\">\n          <h1>{cityName}</h1>\n          <h2>{temperature}ºC</h2>\n          <h2>{weather}</h2>\n          <h4>Feels like {feelsLike}ºC</h4>\n          <img\n            src={`http://openweathermap.org/img/wn/${iconCode}@2x.png`}\n            alt=\"weather icon\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}