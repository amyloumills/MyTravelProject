{"ast":null,"code":"var _jsxFileName = \"/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/src/components/HamburgerMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { useTransition, animated } from \"react-spring\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HamburgerMenu = () => {\n  _s();\n\n  const [showMenu, setShowMenu] = useState(false); //deciding whether we will show the menu. Menu always loads in closed.\n\n  const transitions = useTransition(showMenu, {\n    from: {\n      position: \"absolute\",\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    }\n  }); // let menu;\n  // let menuMask;\n\n  if (showMenu) {\n    menuMask = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuMask\",\n      onClick: () => setShowMenu(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this);\n  } //to make menu more pronounced\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"burgerIcon\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faBars,\n        size: \"2x\",\n        onClick: () => setShowMenu(!showMenu) //toggle\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this), (styles, item) => item && /*#__PURE__*/_jsxDEV(animated.div, {\n      style: styles,\n      children: \"\\u270C\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 31\n    }, this), \") )}\"]\n  }, void 0, true);\n};\n\n_s(HamburgerMenu, \"v83lGEViL3bP9hJz4aZszNcHLbA=\", false, function () {\n  return [useTransition];\n});\n\n_c = HamburgerMenu;\nexport default HamburgerMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"HamburgerMenu\");","map":{"version":3,"sources":["/Users/amymiller/Desktop/Cohort 6/My Project/MyTravelProject/src/components/HamburgerMenu.jsx"],"names":["React","useState","FontAwesomeIcon","faBars","useTransition","animated","HamburgerMenu","showMenu","setShowMenu","transitions","from","position","opacity","enter","leave","menuMask","styles","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,cAAxC;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC,CAD2B,CACsB;;AAEjD,QAAMQ,WAAW,GAAGL,aAAa,CAACG,QAAD,EAAW;AAC3CG,IAAAA,IAAI,EAAE;AAAEC,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,OAAO,EAAE;AAAjC,KADqC;AAE3CC,IAAAA,KAAK,EAAE;AAAED,MAAAA,OAAO,EAAE;AAAX,KAFoC;AAG3CE,IAAAA,KAAK,EAAE;AAAEF,MAAAA,OAAO,EAAE;AAAX;AAHoC,GAAX,CAAjC,CAH2B,CAS3B;AACA;;AAEA,MAAIL,QAAJ,EAAc;AACbQ,IAAAA,QAAQ,gBACP;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,OAAO,EAAE,MAAMP,WAAW,CAAC,KAAD;AAApD;AAAA;AAAA;AAAA;AAAA,YADD;AAGA,GAhB0B,CAgBzB;;;AAEF,sBACC;AAAA,4BACC;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA,6BACC,QAAC,eAAD;AACC,QAAA,IAAI,EAAEL,MADP;AAEC,QAAA,IAAI,EAAC,IAFN;AAGC,QAAA,OAAO,EAAE,MAAMK,WAAW,CAAC,CAACD,QAAF,CAH3B,CAGwC;;AAHxC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,EAQE,CAACS,MAAD,EAASC,IAAT,KAAkBA,IAAI,iBAAI,QAAC,QAAD,CAAU,GAAV;AAAc,MAAA,KAAK,EAAED,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAR5B;AAAA,kBADD;AAeA,CAjCD;;GAAMV,a;UAGeF,a;;;KAHfE,a;AAmCN,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { useTransition, animated } from \"react-spring\";\n\nconst HamburgerMenu = () => {\n\tconst [showMenu, setShowMenu] = useState(false); //deciding whether we will show the menu. Menu always loads in closed.\n\n\tconst transitions = useTransition(showMenu, {\n\t\tfrom: { position: \"absolute\", opacity: 0 },\n\t\tenter: { opacity: 1 },\n\t\tleave: { opacity: 0 },\n\t});\n\n\t// let menu;\n\t// let menuMask;\n\n\tif (showMenu) {\n\t\tmenuMask = (\n\t\t\t<div className=\"menuMask\" onClick={() => setShowMenu(false)}></div>\n\t\t);\n\t} //to make menu more pronounced\n\n\treturn (\n\t\t<>\n\t\t\t<span className=\"burgerIcon\">\n\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\ticon={faBars}\n\t\t\t\t\tsize=\"2x\"\n\t\t\t\t\tonClick={() => setShowMenu(!showMenu)} //toggle\n\t\t\t\t/>\n\t\t\t</span>\n\t\t\t{(styles, item) => item && <animated.div style={styles}>✌️</animated.div>}\n\t\t\t) )}\n\t\t\t{/* {menuMask}\n\t\t\t{menu} */}\n\t\t</>\n\t);\n};\n\nexport default HamburgerMenu;\n"]},"metadata":{},"sourceType":"module"}